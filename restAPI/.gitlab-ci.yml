# image: docker:latest
# services:
#   - docker:dind

stages:
  - clean
  # - sonarqube
  - build
  - test
  - assemble
  
clean:
  stage: clean
  tags: back-end
  script:
    - cd restAPI
    - gradle clean
  artifacts:
    paths:
      - build/libs/*.jar

# sonarqube:
#  stage: sonarqube
#  script:
#    - cd restAPI
#    - ./gradlew sonarqube


build:
  stage: build
  tags: back-end
  script:
    - cd restAPI
    - gradle build
  artifacts:
    paths:
      - build/libs/*.jar

test:
  stage: test
  tags: back-end
  script:
    - cd restAPI
    - gradle test
  artifacts:
    paths:
      - build/libs/*.jar  

assemble:
  stage: assemble
  tags: back-end
  script:
    - cd restAPI
    - gradle assemble
  artifacts:
    paths:
      - build/libs/*.jar

      
after_script:
  - echo "This is form the shell runner"

# image: docker:latest
# services:
#   - docker:dind

# stages:
#   # - clean
#   # - sonarqube
#   # - build
#   - test
#   - assemble
  
# # clean:
# #   image: gradle:latest
# #   stage: clean
# #   script:
# #     - cd restAPI
# #     - gradle clean
# #   artifacts:
# #     paths:
# #       - build/libs/*.jar

# # sonarqube:
# #  stage: sonarqube
# #  script:
# #    - cd restAPI
# #    - ./gradlew sonarqube


# # build:
# #   image: gradle:latest
# #   stage: build
# #   script:
# #     - cd restAPI
# #     - gradle build
# #   artifacts:
# #     paths:
# #       - build/libs/*.jar

# test:
#   image: gradle:latest
#   stage: test
#   script:
#     - cd restAPI
#     - gradle test
#   artifacts:
#     paths:
#       - build/libs/*.jar  

# assemble:
#   image: gradle:latest
#   stage: assemble
#   script:
#     - cd restAPI
#     - gradle assemble
#   artifacts:
#     paths:
#       - build/libs/*.jar

      
# after_script:
#   - echo "This should work with the new repo"
